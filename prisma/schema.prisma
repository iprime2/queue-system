// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}

model User {
  id               String     @id @default(uuid())
  name             String
  email            String     @unique
  password         String?
  // imageUrl         String
  superUser        Boolean
  userAccess       Boolean
  departmentAccess Boolean
  departmentName   String
  department       Department @relation("UserToDepartment", fields: [departmentName], references: [departmentName])
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt

  @@index([departmentName])
}

model Department {
  id             String   @id @default(uuid())
  departmentName String   @unique
  schoolName     String   @unique
  code           String   @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user    User[]    @relation("UserToDepartment")
  token   Token[]   @relation("DepartmentToToken")
  display Counter[] @relation("DisplayToDepartment")
}

model Token {
  id             String     @id @default(uuid())
  tokenNo        Int
  displayName    String
  departmentName String
  department     Department @relation("DepartmentToToken", fields: [departmentName], references: [departmentName])
  closeddAt      DateTime
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Counter {
  id             String     @id @default(uuid())
  departmentName String
  department     Department @relation("DisplayToDepartment", fields: [departmentName], references: [departmentName])
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}
